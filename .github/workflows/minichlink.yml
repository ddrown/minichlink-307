name: Build minichlink-307

on: [push, pull_request]

jobs:
  build-minichlink-307:
    strategy:
        fail-fast: false
        matrix:
            os: [ubuntu-latest, macos-12]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v3
    - name: Install Dependencies (Linux)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get update && sudo apt-get install -y build-essential make libusb-1.0-0-dev libudev-dev mingw-w64-x86-64-dev gcc-mingw-w64-x86-64
    # we don't need to brew install libusb on Mac, actually preinstalled on the runner! :)
    - name: Build (Linux, Mac)
      run: |
       make clean
       make V=1 -j3
    # we cross-compile the Windows binaries from Linux 
    - name: Build (for Windows)
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        OS=Windows_NT make clean
        OS=Windows_NT make V=1 -j3 minichlink-307.exe

    - name: "Pack (Linux)"
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: tar czf minichlink-307.tar.gz minichlink-307 minichlink-307.so 99-minichlink.rules
    - name: "Pack (Mac)"
      if: ${{ matrix.os == 'macos-12' }}
      run: tar czf minichlink-307.tar.gz minichlink-307
    # no packing needed for Windows as it's .exe only

    - name: "Upload minichlink (Linux)"
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: minichlink-307 (Linux)
        path: minichlink-307.tar.gz
    - name: "Upload minichlink-307 (MacOs 12)"
      if: ${{ matrix.os == 'macos-12' }}
      uses: actions/upload-artifact@v3
      with:
        name: minichlink-307 (MacOS 12)
        path: minichlink-307.tar.gz  
    - name: "Upload minichlink-307 (Windows)"
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: minichlink-307 (Windows)
        path: | 
          minichlink-307.exe
          libusb-1.0.dll
